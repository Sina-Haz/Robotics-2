# Usage: python arm_5.py --start 0 0 --goal -2.9 0 --map "arm_polygons.npy"

# Implement PRM algorithm to get from start to goal
# Add 1000 nodes to the graph
# Try to connect with k = 3 closest neighbors

# Once you have graph from PRM, need to run A* or Dijkstra to get path

# Include: 
    # An animation that shows the roadmap data structure generated by PRM growing over the
    # search process in the armâ€™s configuration space, i.e., each node of PRM corresponds to a
    # point in the configuration space and edges correspond to straight line segments. Make sure
    # that your animation properly treats the topology of the configuration space

    # An animation that shows the arm moving along the solution path inside the original workspace
    # from the start configuration to the goal configuration. This path should not be resulting in col-
    # lisions with the environment.